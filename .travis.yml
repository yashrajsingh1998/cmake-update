# matrix:
#   include:
#     - name: CUDA 10
#       dist: focal

# addons:
#   apt:
#     packages:
#       - nvidia-common
#       - nvidia-cuda-toolkit=10.1.243-1
#       - nvidia-cuda-dev
env:
  global:
    - JULIA_DEBUG=CUDAapi

matrix:
  include:
    - env: CUDA=10.2
      os: linux      
addons:
  homebrew:
    packages:
    - bash
    - p7zip
    - gnu-tar
    
before_install:
 
#   - sudo apt update
#   - sudo add-apt-repository ppa:graphics-drivers/ppasudo apt-key adv --fetch-keys 
#   - http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/7fa2af80.pubsudo bash -c 'echo "deb 
#   - http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64 /" > /etc/apt/sources.list.d/cuda.list'sudo bash -c 'echo "deb 
#   - http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64 /" > 
#   - /etc/apt/sources.list.d/cuda_learn.list'
#   - sudo apt update
#   - sudo apt install cuda-10â€“2
#   - sudo apt install libcudnn7
  - if [[ $TRAVIS_OS_NAME == "linux" ]];   then                   ./.travis.linux;   fi
  - if [[ $TRAVIS_OS_NAME == "osx" ]];     then /usr/local/bin/bash .travis.osx;     fi
  - nvcc --version
  
  - sudo find /usr/ -name nppdefs.h

  
#   - sudo apt-get install -qq nvidia-cuda-dev
#   - nvcc --version
#   - if [ $USE_NVML -eq 1 ]; then wget $NVML_LINK$NVML_FILE && chmod u+x $NVML_FILE && sudo ./$NVML_FILE --silent --installdir=/ ; fi
#   - if [ $USE_NVML -eq 1 ]; then export CMAKE_PREFIX_PATH=/usr/src/gdk/nvml/lib/ ; fi
#   - sudo find /usr/ -name libcuda*.so
#   - sudo find /usr/ -name nvml.h
#   - sudo find /usr/ -name libnvidia*.so
#   - sudo find /usr/ -name libnvml*.so

  
  
 
  - wget -O cmake.sh https://cmake.org/files/v3.14/cmake-3.14.1-Linux-x86_64.sh
  - sudo sh cmake.sh --skip-license --exclude-subdir --prefix=/usr/local
  - export PATH=/usr/local/bin:$PATH
  - cmake --version
script:
  - sh ./build.sh
  
  

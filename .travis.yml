# matrix:
#   include:
#     - name: CUDA 10
#       dist: focal
matrix:
  include:
    - name: CUDA 10
      env:
      - CUDA=10.2.89-1
      - CUDA_SHORT=10.2
      - UBUNTU_VERSION=ubuntu2004
      dist: focal
# addons:///////////////addd
#   apt:
#     packages:
#       - nvidia-common
#       - nvidia-cuda-toolkit
#       - nvidia-cuda-dev
      
# env:
#   global:
#     - JULIA_DEBUG=CUDAapi

# matrix:
#   include:
#     - env: CUDA=10.2
#       os: linux      
# addons:
#   homebrew:
#     packages:
#     - bash
#     - p7zip
#     - gnu-tar
    
before_install:
 
#   - sudo apt update
#   - sudo add-apt-repository ppa:graphics-drivers/ppasudo apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/7fa2af80.pubsudo bash -c 'echo "deb http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64 /" > /etc/apt/sources.list.d/cuda.list'sudo bash -c 'echo "deb  http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64 /" >  /etc/apt/sources.list.d/cuda_learn.list'
#   - sudo apt update
  - INSTALLER=cuda-repo-${UBUNTU_VERSION}_${CUDA}_amd64.deb
  - wget http://developer.download.nvidia.com/compute/cuda/repos/${UBUNTU_VERSION}/x86_64/${INSTALLER}
  - sudo dpkg -i ${INSTALLER}
  - wget https://developer.download.nvidia.com/compute/cuda/repos/${UBUNTU_VERSION}/x86_64/7fa2af80.pub
  - sudo apt-key add 7fa2af80.pub
  - sudo apt update -qq
  - sudo apt install -y cuda-core-${CUDA_SHORT/./-} cuda-cudart-dev-${CUDA_SHORT/./-} cuda-cufft-dev-${CUDA_SHORT/./-}
  - sudo apt clean
  - CUDA_HOME=/usr/local/cuda-${CUDA_SHORT}
  - LD_LIBRARY_PATH=${CUDA_HOME}/lib64:${LD_LIBRARY_PATH}
  - PATH=${CUDA_HOME}/bin:${PATH}

  
#   - sudo apt install cuda-10.2-89-1
#   - sudo apt install libcudnn7
#   - echo "if [ -d “/usr/local/cuda-10.2/bin/” ]; then export PATH=/usr/local/cuda-10.2/bin${PATH:+:${PATH}} export LD_LIBRARY_PATH=/usr/local/cuda-10.1/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}} fi" | tee -a ~/.profile 

  - nvcc --version
  
  - sudo find /usr/ -name nppdefs.h

  
#   - sudo apt-get install -qq nvidia-cuda-dev
#   - nvcc --version
#   - if [ $USE_NVML -eq 1 ]; then wget $NVML_LINK$NVML_FILE && chmod u+x $NVML_FILE && sudo ./$NVML_FILE --silent --installdir=/ ; fi
#   - if [ $USE_NVML -eq 1 ]; then export CMAKE_PREFIX_PATH=/usr/src/gdk/nvml/lib/ ; fi
#   - sudo find /usr/ -name libcuda*.so
#   - sudo find /usr/ -name nvml.h
#   - sudo find /usr/ -name libnvidia*.so
#   - sudo find /usr/ -name libnvml*.so

  
  
 
  - wget -O cmake.sh https://cmake.org/files/v3.14/cmake-3.14.1-Linux-x86_64.sh
  - sudo sh cmake.sh --skip-license --exclude-subdir --prefix=/usr/local
  - export PATH=/usr/local/bin:$PATH
  - cmake --version
script:
  - sh ./build.sh
  
  
